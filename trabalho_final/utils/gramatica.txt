start ::= '' 
start ::= STATEMENT 
start ::= FUNCLIST
FUNCLIST ::= FUNCDEF FUNCLIST'
FUNCLIST' ::= FUNCLIST 
FUNCLIST' ::= ''
FUNCDEF ::= def ident ( PARAMLIST ) { STATELIST }
PARAMLIST ::= int ident PARAMLIST' 
PARAMLIST ::= float ident PARAMLIST' 
PARAMLIST ::= string ident PARAMLIST'
PARAMLIST ::= ''
PARAMLIST' ::= , PARAMLIST 
PARAMLIST' ::= ''
STATEMENT ::= VARDECL ; 
STATEMENT ::= ATRIBSTAT ; 
STATEMENT ::= PRINTSTAT ; 
STATEMENT ::= READSTAT ; 
STATEMENT ::= RETURNSTAT ; 
STATEMENT ::= IFSTAT 
STATEMENT ::= FORSTAT 
STATEMENT ::= { STATELIST } 
STATEMENT ::= break ; 
STATEMENT ::= ;
VARDECL ::= int ident VARDECL' 
VARDECL ::= float ident VARDECL' 
VARDECL ::= string ident VARDECL'
VARDECL' ::= '' 
VARDECL' ::= [ int_constant ] VARDECL'
ATRIBSTAT ::= LVALUE = ATRIBSTAT'
ATRIBSTAT' ::= EXPRESSION 
ATRIBSTAT' ::= ALLOCEXPRESSION 
ATRIBSTAT' ::= FUNCCALL
FUNCCALL ::= call ident ( PARAMLISTCALL )
PARAMLISTCALL ::= '' 
PARAMLISTCALL ::= ident PARAMLISTCALL'
PARAMLISTCALL' ::= '' 
PARAMLISTCALL' ::= , PARAMLISTCALL
PRINTSTAT ::= print EXPRESSION
READSTAT ::= read LVALUE
RETURNSTAT ::= return RETURNSTAT'
RETURNSTAT' ::= ''
RETURNSTAT' ::= EXPRESSION
IFSTAT ::= if ( EXPRESSION ) { STATEMENT } IFSTAT'
IFSTAT' ::= '' 
IFSTAT' ::= else IFSTAT''
IFSTAT'' ::= IFSTAT
IFSTAT'' ::= { STATEMENT }
FORSTAT ::= for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
STATELIST ::= STATEMENT STATELIST'
STATELIST' ::= '' 
STATELIST' ::= STATELIST
ALLOCEXPRESSION ::= new ALLOCEXPRESSION'
ALLOCEXPRESSION' ::= int ALLOCEXPRESSION'' 
ALLOCEXPRESSION' ::= float ALLOCEXPRESSION'' 
ALLOCEXPRESSION' ::= string ALLOCEXPRESSION''
ALLOCEXPRESSION'' ::= [ NUMEXPRESSION ] ALLOCEXPRESSION'''
ALLOCEXPRESSION''' ::= '' 
ALLOCEXPRESSION''' ::= ALLOCEXPRESSION''
EXPRESSION ::= NUMEXPRESSION EXPRESSION' 
EXPRESSION' ::= '' 
EXPRESSION' ::= < EXPRESSION'' 
EXPRESSION' ::= > EXPRESSION'' 
EXPRESSION' ::= == NUMEXPRESSION 
EXPRESSION' ::= != NUMEXPRESSION
EXPRESSION'' ::= = NUMEXPRESSION 
EXPRESSION'' ::= NUMEXPRESSION
NUMEXPRESSION ::= TERM NUMEXPRESSION' 
NUMEXPRESSION' ::= '' 
NUMEXPRESSION' ::= + NUMEXPRESSION 
NUMEXPRESSION' ::= - NUMEXPRESSION
TERM ::= UNARYEXPR TERM'
TERM' ::= '' 
TERM' ::= * TERM 
TERM' ::= / TERM 
TERM' ::= % TERM
UNARYEXPR ::= FACTOR 
UNARYEXPR ::= + FACTOR 
UNARYEXPR ::= - FACTOR
FACTOR ::= int_constant 
FACTOR ::= float_constant 
FACTOR ::= string_constant 
FACTOR ::= null 
FACTOR ::= LVALUE 
FACTOR ::= ( NUMEXPRESSION )
LVALUE ::= ident LVALUE'
LVALUE' ::= '' 
LVALUE' ::= [ NUMEXPRESSION ] LVALUE'